from aiogram.types import Message, CallbackQuery
import asyncio
from aiogram import Bot, Dispatcher
from aiogram.filters.command import Command

from keyboards.menu import main_kb
from keyboards.tasks import tasks_kb, module_3_kb
from keyboards.learn import learn_kb
from keyboards.useful_links import ul_kb
from bot_token import TOKEN

dp = Dispatcher()
bot = Bot(token=TOKEN)


@dp.message(Command('start'))
async def cmd_start(message: Message):
    await message.answer(text='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª: ', reply_markup=main_kb)


# –ó–¥–µ—Å—å –Ω–∞–º –∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è callback_data, –∫–æ—Ç–æ—Ä—É—é –º—ã –ø—Ä–æ–ø–∏—Å—ã–≤–∞–ª–∏ —Ä–∞–Ω–µ–µ –≤ –Ω–∞–∂–∞—Ç–∏—è—Ö –Ω–∞ –∫–Ω–æ–ø–∫–∏
@dp.callback_query(lambda callback: callback.data)
async def process_callback(callback: CallbackQuery):
    data = callback.data
    # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ üîô"
    if data == 'Menu':
        await bot.answer_callback_query(callback.id)
        await bot.edit_message_text(text='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª: ',
                                    chat_id=callback.from_user.id,
                                    message_id=callback.message.message_id,
                                    reply_markup=main_kb)
    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ —Å –º–æ–¥—É–ª—è–º–∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–¥–∞–Ω–∏—è üìù"
    if data == 'Tasks':
        await bot.answer_callback_query(callback.id)
        await bot.edit_message_text(text='–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥—É–ª—å: ',
                                    chat_id=callback.from_user.id,
                                    message_id=callback.message.message_id,
                                    reply_markup=tasks_kb)
    if data == 'Module 3':
        await bot.answer_callback_query(callback.id)
        await bot.edit_message_text(text='–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–∫: ',
                                    chat_id=callback.from_user.id,
                                    message_id=callback.message.message_id,
                                    reply_markup=module_3_kb
                                    )
    if data == 'Learn':
        await bot.answer_callback_query(callback.id)
        await bot.edit_message_text(text='–°–∞–π—Ç—ã –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ –æ–±—É—á–µ–Ω–∏—è: ',
                                    chat_id=callback.from_user.id,
                                    message_id=callback.message.message_id,
                                    reply_markup=learn_kb
                                    )
    if data == 'Useful_links':
        await bot.answer_callback_query(callback.id)
        await bot.edit_message_text(text='–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏',
                                    chat_id=callback.from_user.id,
                                    message_id=callback.message.message_id,
                                    reply_markup=ul_kb)


async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
